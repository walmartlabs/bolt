{
  "name": "electrode-bolt",
  "version": "1.0.12",
  "description": "Opinionated meta config runner for react components",
  "scripts": {
    "dev": "bolt server-dev & bolt server-test",
    "hot": "bolt server-hot & bolt server-test",
    "lint-react-demo": "eslint --ext .js,.jsx -c ./node_modules/electrode-bolt/config/eslint/.eslintrc-react-demo demo/*.jsx --color",
    "lint-react-src": "eslint --ext .js,.jsx -c ./node_modules/electrode-bolt/config/eslint/.eslintrc-react src --color",
    "lint-react-test": "eslint --ext .js,.jsx -c ./node_modules/electrode-bolt/config/eslint/.eslintrc-react-test test/client --color",
    "lint": "bolt lint-react-demo && bolt lint-react-src && bolt lint-react-test",
    "clean-dist": "rimraf dist",
    "build-dist-min": "webpack --config node_modules/electrode-bolt/config/webpack/webpack.config.js --colors",
    "build-dist-dev": "webpack --config node_modules/electrode-bolt/config/webpack/webpack.config.dev.js --colors",
    "build-dist": "bolt clean-dist && bolt build-dist-min && bolt build-dist-dev",
    "clean-lib": "rimraf lib",
    "build-lib": "bolt clean-lib && babel --stage 1 src -d lib",
    "clean": "bolt clean-lib && bolt clean-dist",
    "build": "bolt build-lib && bolt build-dist",
    "server-dev": "webpack-dev-server --port 4000 --config node_modules/electrode-bolt/config/webpack/webpack.config.demo.dev.js --colors",
    "server-hot": "webpack-dev-server --port 4000 --config node_modules/electrode-bolt/config/webpack/webpack.config.demo.hot.js --colors",
    "server-test": "webpack-dev-server --port 3001 --config node_modules/electrode-bolt/config/webpack/webpack.config.test.js --colors",
    "cov-frontend": "istanbul check-coverage 'coverage/client/*/coverage.json' --config=node_modules/electrode-bolt/config/istanbul/.istanbul.yml",
    "test-frontend": "karma start node_modules/electrode-bolt/config/karma/karma.conf.js --colors",
    "test-frontend-cov": "karma start node_modules/electrode-bolt/config/karma/karma.conf.coverage.js --colors",
    "test-frontend-ci": "karma start --browsers PhantomJS,Firefox node_modules/electrode-bolt/config/karma/karma.conf.coverage.js --colors",
    "test-frontend-dev": "karma start node_modules/electrode-bolt/config/karma/karma.conf.dev.js --colors",
    "test": "npm run bolt:check-ci",
    "test-ci": "bolt test-frontend-ci",
    "test-cov": "bolt test-frontend-cov",
    "test-dev": "bolt test-frontend-dev",
    "check": "bolt lint && bolt check-cov && bolt cov-frontend",
    "check-ci": "bolt lint && bolt test-ci",
    "check-cov": "bolt lint && bolt test-cov",
    "check-dev": "bolt lint && bolt test-dev",
    "init": "node ./node_modules/electrode-bolt/lib/init.js",
    "bolt:test": "NODE_ENV=test mocha --require ./test/spec/entry.js --reporter spec --bail --check-leaks test --recursive --color --config=node_modules/electrode-bolt/config/istanbul/.istanbul.yml",
    "bolt:ci": "istanbul cover _mocha --report lcovonly -- -R spec --require ./test/spec/entry.js test --recursive --color --config=node_modules/electrode-bolt/config/istanbul/.istanbul.yml",
    "bolt:check-ci": "NODE_ENV=test npm run bolt:lint && npm run bolt:ci",
    "bolt:cov": "NODE_ENV=test istanbul cover _mocha -- -R spec --require ./test/spec/entry.js test --recursive --color --config=node_modules/electrode-bolt/config/istanbul/.istanbul.yml",
    "bolt:check-cov": "NODE_ENV=test npm run bolt:lint && npm run bolt:cov",
    "bolt:tap": "NODE_ENV=test istanbul cover _mocha -- -R tap --require ./test/spec/entry.js test --recursive --color --config=node_modules/electrode-bolt/config/istanbul/.istanbul.yml",
    "bolt:lint": "NODE_ENV=test eslint --ext .js -c ./config/eslint/.eslintrc-bolt bin config --color"
  },
  "bin": {
    "bolt": "./bin/bolt.js"
  },
  "main": "bin/bolt.js",
  "repository": "walmartreact/electrode-bolt",
  "author": {
    "name": "chaseadamsio"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/walmartreact/bolt/issues"
  },
  "homepage": "https://github.com/walmartreact/bolt#readme",
  "dependencies": {
    "babel": "^5.8.21",
    "babel-core": "^5.8.22",
    "babel-eslint": "^4.0.10",
    "babel-loader": "^5.3.2",
    "chai": "^3.2.0",
    "chalk": "^1.1.1",
    "css-loader": "^0.16.0",
    "eslint": "~1.7.0",
    "eslint-config-defaults": "~7.0.0",
    "eslint-plugin-filenames": "~0.1.2",
    "eslint-plugin-react": "~3.6.3",
    "file-loader": "^0.11.2",
    "fs-extra": "^0.24.0",
    "isparta-loader": "^1.0.0",
    "istanbul": "^0.3.18",
    "json-loader": "^0.5.3",
    "jsonfile": "^2.2.2",
    "karma": "^0.13.9",
    "karma-chrome-launcher": "^0.2.0",
    "karma-coverage": "^0.4.2",
    "karma-firefox-launcher": "^0.1.6",
    "karma-ie-launcher": "^0.2.0",
    "karma-intl-shim": "^1.0.0",
    "karma-mocha": "^0.2.0",
    "karma-mocha-reporter": "^1.1.1",
    "karma-phantomjs-launcher": "^0.2.0",
    "karma-phantomjs-shim": "^1.0.0",
    "karma-safari-launcher": "^0.1.1",
    "karma-sauce-launcher": "^0.2.14",
    "karma-sinon-chai": "^1.0.0",
    "karma-spec-reporter": "0.0.20",
    "karma-webpack": "^1.7.0",
    "lodash": "^3.10.1",
    "mkdirp": "^0.5.1",
    "mocha": "^2.3.3",
    "phantomjs": "^1.9.18",
    "raw-loader": "^0.5.1",
    "react": "^0.14.0",
    "react-addons-test-utils": "^0.14.0",
    "react-dom": "^0.14.0",
    "react-hot-loader": "^1.2.8",
    "react-tools": "^0.13.2",
    "rimraf": "^2.4.0",
    "sinon": "^1.15.4",
    "sinon-chai": "^2.8.0",
    "style-loader": "^0.12.3",
    "stylus-loader": "^1.2.1",
    "url-loader": "^0.5.6",
    "webpack": "^1.11.0",
    "webpack-dev-server": "^1.10.1"
  },
  "devDependencies": {
    "html-webpack-plugin": "^1.6.1",
    "proxyquire": "^1.7.2"
  },
  "readme": "# bolt\n\n> An opinionated meta config runner for react components, doing the heavy lifting so you don't have to.\n\nProvides CLI access to things such as:\n\n- `webpack`\n- `eslint`\n- `karma`\n\nthrough `bolt`.\n\n## Install\n\nwithin an electrode package, run:\n\n```sh\n$ npm install electrode-bolt --save\n```\n\n1. in your `package.json`, replace existing scripts with `bolt <task>` where the task is the name of the task being replaced. For instance: `\"cov-frontend\": \"istanbul check-coverage 'coverage/client/*/coverage.json'\"` would be replaced with `\"cov-frontend\": \"bolt cov-frontend\"`.\n1. Enjoy seamless integration with pre-existing configs for your opininated `electrode` component!\n\n**Run `bolt` within your package to see the scripts that are available to you.**\n\n## Usage\n\nOnce you've followed the steps above, you should be able to not worry about using it. `bolt` does the work for you.\n\n## Unique Configuration\n\nSo you don't want to the `bolt` command out of the box? No problem!\n\nYou can override a command in _your_ `package.json` and run `bolt <cmd>` and `bolt` will opt for your script over the script it provides.\n\nFor example, say you run:\n\n```\n$ bolt clean-dist\n```\n\n`bolt` will run `rimraf` on your `dist` directory. If you wanted it to do something else such as echo \"I love electricity!\", you can put the following script in your `scripts` object:\n\n```\n\"scripts\": {\n  \"clean-dist\": \"echo 'I love electricity!'\"\n  ...\n}\n```\n\nNow when you run `bolt clean-dist`, rather than it running `rimraf dist`, it will echo \"I love electricity!\".\n\n## Why?\n\nGoing through and modifying `*.config*` files in _every_ react component library you have (which correlates 1:1 to a git repository) is a huge pain in the butt, it's a lot of copy/pasta and no one should 1) have to do that and 2) have to endure the possible degradation over time of human copy/pasta.\n\nThis package tries to solve the problem of creating a \"meta-monolith\" that stands behind our components so people can just build cool stuff and not worry about all the config that goes into keeping a component up to date.\n\nMaybe one day it won't be opinionated. But this day? Not this day.\n\n## Opinionated Directory Structure\n\n```\n|-- my_project\n|   |-- package.json\n|   |-- demo\n|   |   |-- index.html\n|   |   |-- demo.jsx\n|   |-- dist\n|   |-- src\n|   |   |-- components\n|   |   |   |-- component.jsx\n|   |   |-- index.js\n|   |-- docs\n|   |-- test\n|       |-- client\n|           |-- component\n|               |-- component.spec.jsx\n```\n",
  "readmeFilename": "README.md",
  "gitHead": "95155dd088c9547a901708b6854b3efec6275629",
  "_id": "electrode-bolt@0.4.14",
  "_shasum": "d5c23a5eaa0140690d40d89cee6a311e603b2514",
  "_from": "electrode-bolt@>=0.4.13 <0.5.0"
}